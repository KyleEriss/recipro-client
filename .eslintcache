[{"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\index.js":"1","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\reportWebVitals.js":"2","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\App.js":"3","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Header\\Header.js":"4","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Favorites\\Favorites.js":"5","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\LandingPage\\LandingPage.js":"6","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Search\\Search.js":"7","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Login\\LoginPage.js":"8","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Utils\\PublicRoute.js":"9","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Utils\\PrivateRoute.js":"10","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\CreateAccount\\CreateAccountPage.js":"11","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\token-service.js":"12","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Header\\NavLinks.js":"13","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\config.js":"14","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\API-Service.js":"15","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Utils\\Utils.js":"16","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Login\\LoginForm.js":"17","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\LandingPage\\LandingForm.js":"18","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\CreateAccount\\CreateAccountForm.js":"19"},{"size":544,"mtime":1616382827676,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1366,"mtime":1616370669742,"results":"23","hashOfConfig":"21"},{"size":1418,"mtime":1616384796132,"results":"24","hashOfConfig":"21"},{"size":2844,"mtime":1616377846753,"results":"25","hashOfConfig":"21"},{"size":572,"mtime":1616274460716,"results":"26","hashOfConfig":"21"},{"size":6576,"mtime":1616382044318,"results":"27","hashOfConfig":"21"},{"size":665,"mtime":1616275212386,"results":"28","hashOfConfig":"21"},{"size":514,"mtime":1616228547874,"results":"29","hashOfConfig":"21"},{"size":697,"mtime":1616179374885,"results":"30","hashOfConfig":"21"},{"size":561,"mtime":1616179652776,"results":"31","hashOfConfig":"21"},{"size":556,"mtime":1616169688721,"results":"32","hashOfConfig":"21"},{"size":1119,"mtime":1616187531833,"results":"33","hashOfConfig":"21"},{"size":175,"mtime":1616385140088,"results":"34","hashOfConfig":"21"},{"size":2200,"mtime":1616196809096,"results":"35","hashOfConfig":"21"},{"size":680,"mtime":1615938132515,"results":"36","hashOfConfig":"21"},{"size":2187,"mtime":1616275179926,"results":"37","hashOfConfig":"21"},{"size":715,"mtime":1616274459227,"results":"38","hashOfConfig":"21"},{"size":2176,"mtime":1616180125382,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"111zhx8",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\index.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\reportWebVitals.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\App.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Header\\Header.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Favorites\\Favorites.js",["81"],"import React from 'react';\r\nimport AuthApiService from '../../API-Service';\r\nimport { Button } from '../Utils/Utils';\r\nimport config from '../../config';\r\nimport TokenService from '../../token-service';\r\nimport './Favorites.css';\r\n\r\nexport default class Favorites extends React.Component {\r\n\r\n    state = {\r\n        recipes: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${config.API_ENDPOINT}/favorites`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    recipes: data, loading: false\r\n                })\r\n                console.log(this.state.recipes)\r\n            })\r\n            .catch(error => {\r\n                console.log({ error })\r\n            })\r\n    }\r\n\r\n    openRecipeLinkWindow = () => {\r\n        return window.open(this.state.recipeUrl);\r\n    }\r\n\r\n    handleRecipeLink = (event) => {\r\n\r\n        const recipeId = event.currentTarget.id;\r\n        const apiKey = config.API_KEY;\r\n\r\n        let recipeInfo = `https://api.spoonacular.com/recipes/${recipeId}/information?apiKey=${apiKey}`;\r\n\r\n        console.log(recipeId)\r\n\r\n        fetch(recipeInfo)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ recipeUrl: data.sourceUrl }, () => {\r\n                    this.openRecipeLinkWindow()\r\n                })\r\n            })\r\n\r\n        console.log(this.state.recipeUrl)\r\n\r\n    }\r\n\r\n    handleRemove = (id) => {\r\n\r\n        const recipeId = id;\r\n\r\n        console.log(recipeId)\r\n\r\n        AuthApiService.deleteRecipe(recipeId);\r\n\r\n        const newRecipeList = this.state.recipes.filter((recipe) => recipe.id !== recipeId);\r\n\r\n        this.setState({\r\n            recipes: newRecipeList\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"recipeTitle\">\r\n\r\n                {this.state.loading || !this.state.recipes ? (\r\n                    <div></div>\r\n                ) : (\r\n                    <ul>\r\n                        {this.state.recipes.map((recipe) =>\r\n                            <li key={recipe.id}>\r\n                                <img src={recipe.recipeimage} />\r\n                                <h3 onClick={this.handleRecipeLink} id={recipe.recipeid}>\r\n                                    {recipe.recipetitle}\r\n                                </h3>\r\n                                <Button onClick={() => this.handleRemove(recipe.id)}>Delete from Playlist</Button>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\LandingPage\\LandingPage.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Search\\Search.js",["82","83","84"],"import React from 'react';\r\nimport { Button, Input } from '../Utils/Utils';\r\nimport AuthApiService from '../../API-Service';\r\nimport config from '../../config';\r\nimport './Search.css';\r\n\r\nexport default class Search extends React.Component {\r\n\r\n    state = {\r\n        ingredientItem: \"\",\r\n        selectIngredients: [],\r\n        ingredientList: [],\r\n        recipes: [],\r\n        recipeUrl: \"\",\r\n        loading: true\r\n    };\r\n\r\n    handleChange = event => {\r\n        event.preventDefault();\r\n        //\"d270212a1e834015b6c14390454993c9\"\r\n        const apiKey = config.API_KEY;\r\n        const apiEndpoint = config.API_ENDPOINT\r\n        console.log(apiKey)\r\n        console.log(apiEndpoint)\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n        let autocompleteUrl = `https://api.spoonacular.com/food/ingredients/autocomplete?apiKey=${apiKey}&query=${this.state.ingredientItem}&number=5`\r\n\r\n        fetch(autocompleteUrl)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    ingredientList: data.map(item => {\r\n                        return item.name\r\n                    })\r\n                })\r\n            })\r\n    };\r\n\r\n    addSelectIngredients = (ingredient) => {\r\n        this.setState({\r\n            selectIngredients: [ingredient, ...this.state.selectIngredients],\r\n            ingredientItem: \"\",\r\n            ingredientList: []\r\n\r\n        })\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const apiKey = config.API_KEY;\r\n\r\n        let recipeSearchUrl = `https://api.spoonacular.com/recipes/findByIngredients?apiKey=${apiKey}&ingredients=${this.state.selectIngredients}&number=5`;\r\n\r\n        fetch(recipeSearchUrl)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    recipes: data\r\n                })\r\n            })\r\n    }\r\n\r\n    openRecipeLinkWindow = () => {\r\n        return window.open(this.state.recipeUrl);\r\n    }\r\n\r\n    handleRecipeLink = (event) => {\r\n\r\n        const recipeId = event.currentTarget.id;\r\n        const apiKey = config.API_KEY;\r\n\r\n        let recipeInfo = `https://api.spoonacular.com/recipes/${recipeId}/information?apiKey=${apiKey}`;\r\n\r\n        console.log(recipeId)\r\n\r\n        fetch(recipeInfo)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ recipeUrl: data.sourceUrl }, () => {\r\n                    this.openRecipeLinkWindow()\r\n                })\r\n            })\r\n\r\n        console.log(this.state.recipeUrl)\r\n\r\n    }\r\n\r\n    removeIngredient = (name) => {\r\n\r\n        let newSelectedIngredients = this.state.selectIngredients.filter(ingredient => ingredient !== name);\r\n\r\n        console.log(newSelectedIngredients)\r\n\r\n        this.setState({\r\n            selectIngredients: newSelectedIngredients\r\n        })\r\n\r\n        return this.state.selectIngredients;\r\n    }\r\n\r\n    addToFavorites = (event) => {\r\n\r\n        const idNumber = event.currentTarget.dataset.id;\r\n\r\n        console.log(idNumber)\r\n\r\n        let recipeIdsMapped = this.state.recipes.map(recipe => {\r\n            return recipe.id\r\n        })\r\n\r\n        let recipeImagesMapped = this.state.recipes.map(recipe => {\r\n            return recipe.image\r\n        })\r\n\r\n        let recipeTitlesMapped = this.state.recipes.map(recipe => {\r\n            return recipe.title\r\n        })\r\n\r\n        const recipeId = recipeIdsMapped[idNumber];\r\n        const recipeImage = recipeImagesMapped[idNumber]\r\n        const recipeTitle = recipeTitlesMapped[idNumber];\r\n\r\n        AuthApiService.postRecipe(recipeId, recipeImage, recipeTitle);\r\n        \r\n        const newRecipeList = this.state.recipes.filter((recipe) => recipe.id !== recipeId);\r\n\r\n        this.setState ({\r\n            recipes: newRecipeList\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"allElements\">\r\n                <div className=\"ingredientOptions\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"ingredientInput\">\r\n                            <Input\r\n                                name=\"ingredientItem\"\r\n                                placeholder=\"add ingredient\"\r\n                                value={this.state.ingredientItem}\r\n                                required\r\n                                autoComplete=\"off\"\r\n                                onChange={this.handleChange}\r\n                                id=\"ingredientOptions\"\r\n                            />\r\n                            <ul>\r\n                                {this.state.ingredientList.map((item) => <li onClick={() => this.addSelectIngredients(item)}>{item}</li>)}\r\n                            </ul>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"ingredientButton\">\r\n                        <button onClick={this.addToList}>add ingredient</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"selectedIngredients\">\r\n                    <ul>\r\n                        {this.state.selectIngredients.map((ingredient) =>\r\n                            <li key={ingredient}>\r\n                                {ingredient}\r\n                                <button className=\"Note__delete\" type=\"button\" onClick={() => this.removeIngredient(ingredient)}>remove</button>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n\r\n                <Button type=\"submit\" onClick={this.handleSubmit}>search recipes</Button>\r\n\r\n                <div className=\"recipeTitle\">\r\n                    <ul>\r\n                        {this.state.recipes.map((recipe, idx) =>\r\n                            <li key={idx}>\r\n                                <img src={recipe.image} />\r\n                                <h3 onClick={this.handleRecipeLink} id={recipe.id}>\r\n                                    {recipe.title}\r\n                                </h3>\r\n                                <button type=\"button\" onClick={this.addToFavorites} data-id={idx}>Save this recipe</button>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n{/* <div className=\"recipeSearchButton\">\r\n<Button type=\"submit\">search recipes</Button>\r\n</div> */}\r\n\r\n\r\n{/* <a onClick={this.handleRecipeLink}href={this.state.recipeUrl} data-id={idx}> */ }","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Login\\LoginPage.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Utils\\PublicRoute.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Utils\\PrivateRoute.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\CreateAccount\\CreateAccountPage.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\token-service.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Header\\NavLinks.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\config.js",["85"],"export default {\r\n    API_ENDPOINT: 'https://salty-badlands-38707.herokuapp.com',\r\n    API_KEY: process.env.REACT_APP_API_KEY,\r\n    TOKEN_KEY: 'recipro-client-auth-token',\r\n};","C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\API-Service.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Utils\\Utils.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\Login\\LoginForm.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\LandingPage\\LandingForm.js",[],"C:\\Users\\kylee\\Documents\\Thinkful\\projects\\recipro-client\\src\\components\\CreateAccount\\CreateAccountForm.js",[],{"ruleId":"86","severity":1,"message":"87","line":87,"column":33,"nodeType":"88","endLine":87,"endColumn":65},{"ruleId":"86","severity":1,"message":"87","line":181,"column":33,"nodeType":"88","endLine":181,"endColumn":59},{"ruleId":"89","severity":1,"message":"90","line":197,"column":1,"nodeType":"91","messageId":"92","endLine":199,"endColumn":11},{"ruleId":"89","severity":1,"message":"90","line":202,"column":1,"nodeType":"91","messageId":"92","endLine":202,"endColumn":86},{"ruleId":"93","severity":1,"message":"94","line":1,"column":1,"nodeType":"95","endLine":5,"endColumn":3},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]